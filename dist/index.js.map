{
  "version": 3,
  "sources": ["mock-node-modules:fs", "mock-node-modules:path", "../src/webp_converter.js", "../src/lib.ts"],
  "sourcesContent": ["export default {};", "export default {};", "// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\n  var minVersion = 160000;\n  if (numericVersion < 160000) {\n    throw new Error('This emscripten-generated code requires node v16.0.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror, binary = true) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : 'utf8', (err, data) => {\n    if (err) onerror(err);\n    else onload(binary ? data.buffer : data);\n  });\n};\n// end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process.argv.slice(2);\n\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process.on('uncaughtException', (ex) => {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.startsWith('blob:')) {\n    scriptDirectory = '';\n  } else {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/')+1);\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('asm', 'wasmExports');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar FETCHFS = 'FETCHFS is no longer included by default; build with -lfetchfs.js';\nvar ICASEFS = 'ICASEFS is no longer included by default; build with -licasefs.js';\nvar JSFILEFS = 'JSFILEFS is no longer included by default; build with -ljsfilefs.js';\nvar OPFS = 'OPFS is no longer included by default; build with -lopfs.js';\n\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, 'shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.');\n\n// end include: shell.js\n\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary; \nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\n\nif (typeof WebAssembly != 'object') {\n  err('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\n// include: runtime_shared.js\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n// end include: runtime_shared.js\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with SAFE_HEAP and ASAN which also\n  // monitor writes to address zero.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[((0)>>2)] = 1668509029;\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[((0)>>2)] != 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(() => {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err(`dependency: ${dep}`);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init() { FS.error() },\n  createDataFile() { FS.error() },\n  createPreloadedFile() { FS.error() },\n  createLazyFile() { FS.error() },\n  open() { FS.error() },\n  mkdev() { FS.error() },\n  registerDevice() { FS.error() },\n  analyzePath() { FS.error() },\n\n  ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n// end include: URIUtils.js\nfunction createExportWrapper(name, nargs) {\n  return (...args) => {\n    assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\n    var f = wasmExports[name];\n    assert(f, `exported native function \\`${name}\\` not found`);\n    // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.\n    assert(args.length <= nargs, `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);\n    return f(...args);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'webp_converter.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw 'both async and sync fetching of the wasm failed';\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(binaryFile)\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n        if (!response['ok']) {\n          throw `failed to load wasm binary file at '${binaryFile}'`;\n        }\n        return response['arrayBuffer']();\n      }).catch(() => getBinarySync(binaryFile));\n    }\n    else if (readAsync) {\n      // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n      return new Promise((resolve, reject) => {\n        readAsync(binaryFile, (response) => resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))), reject)\n      });\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then((binary) => {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(receiver, (reason) => {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n      !isFileURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err(`wasm streaming compile failed: ${reason}`);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  }\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    assert(wasmMemory, 'memory not found in wasm exports');\n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n    assert(wasmTable, 'table not found in wasm exports');\n\n    addOnInit(wasmExports['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\n        return false;\n    }\n  }\n\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName, incoming=true) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get() {\n        let extra = incoming ? ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)' : '';\n        abort(`\\`Module.${prop}\\` has been replaced by \\`${newName}\\`` + extra);\n\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis != 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get() {\n        warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\nmissingGlobal('asm', 'Please use wasmExports instead');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis != 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS library is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get() {\n        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(...args) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as warnings.\n  console.warn(...args);\n}\n// end include: runtime_debug.js\n// === Body ===\n// end include: preamble.js\n\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[ptr];\n      case 'i8': return HEAP8[ptr];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = Module['noExitRuntime'] || true;\n\n  var ptrToString = (ptr) => {\n      assert(typeof ptr === 'number');\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      ptr >>>= 0;\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[ptr] = value; break;\n      case 'i8': HEAP8[ptr] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  var stackRestore = (val) => __emscripten_stack_restore(val);\n\n  var stackSave = () => _emscripten_stack_get_current();\n\n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    };\n\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      assert(typeof ptr == 'number', `UTF8ToString expects a number (got ${typeof ptr})`);\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var ___assert_fail = (condition, filename, line, func) => {\n      abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    };\n\n  class ExceptionInfo {\n      // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\n      constructor(excPtr) {\n        this.excPtr = excPtr;\n        this.ptr = excPtr - 24;\n      }\n  \n      set_type(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      }\n  \n      get_type() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      }\n  \n      set_destructor(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      }\n  \n      get_destructor() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      }\n  \n      set_caught(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(this.ptr)+(12)] = caught;\n      }\n  \n      get_caught() {\n        return HEAP8[(this.ptr)+(12)] != 0;\n      }\n  \n      set_rethrown(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(this.ptr)+(13)] = rethrown;\n      }\n  \n      get_rethrown() {\n        return HEAP8[(this.ptr)+(13)] != 0;\n      }\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      init(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      }\n  \n      set_adjusted_ptr(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      }\n  \n      get_adjusted_ptr() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      }\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      get_exception_ptr() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      }\n    }\n  \n  var exceptionLast = 0;\n  \n  var uncaughtExceptionCount = 0;\n  var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      assert(false, 'Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.');\n    };\n\n  var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {};\n\n  var embind_init_charCodes = () => {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    };\n  var embind_charCodes;\n  var readLatin1String = (ptr) => {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    };\n  \n  var awaitingDependencies = {\n  };\n  \n  var registeredTypes = {\n  };\n  \n  var typeDependencies = {\n  };\n  \n  var BindingError;\n  var throwBindingError = (message) => { throw new BindingError(message); };\n  \n  \n  \n  \n  var InternalError;\n  var throwInternalError = (message) => { throw new InternalError(message); };\n  var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n  /** @param {Object=} options */\n  function sharedRegisterType(rawType, registeredInstance, options = {}) {\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n        throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n  \n  var GenericWireTypeSize = 8;\n  /** @suppress {globalThis} */\n  var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': GenericWireTypeSize,\n          'readValueFromPointer': function(pointer) {\n              return this['fromWireType'](HEAPU8[pointer]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  \n  var shallowCopyInternalPointer = (o) => {\n      return {\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType,\n      };\n    };\n  \n  var throwInstanceAlreadyDeleted = (obj) => {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');\n    };\n  \n  var finalizationRegistry = false;\n  \n  var detachFinalizer = (handle) => {};\n  \n  var runDestructor = ($$) => {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    };\n  var releaseClassHandle = ($$) => {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n        runDestructor($$);\n      }\n    };\n  \n  var downcastPointer = (ptr, ptrClass, desiredClass) => {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n        return null; // no conversion\n      }\n  \n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n        return null;\n      }\n      return desiredClass.downcast(rv);\n    };\n  \n  var registeredPointers = {\n  };\n  \n  var getInheritedInstanceCount = () => Object.keys(registeredInstances).length;\n  \n  var getLiveInheritedInstances = () => {\n      var rv = [];\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n      return rv;\n    };\n  \n  var deletionQueue = [];\n  var flushPendingDeletes = () => {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj['delete']();\n      }\n    };\n  \n  var delayFunction;\n  \n  \n  var setDelayFunction = (fn) => {\n      delayFunction = fn;\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    };\n  var init_embind = () => {\n      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;\n      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;\n      Module['flushPendingDeletes'] = flushPendingDeletes;\n      Module['setDelayFunction'] = setDelayFunction;\n    };\n  var registeredInstances = {\n  };\n  \n  var getBasestPointer = (class_, ptr) => {\n      if (ptr === undefined) {\n          throwBindingError('ptr should not be undefined');\n      }\n      while (class_.baseClass) {\n          ptr = class_.upcast(ptr);\n          class_ = class_.baseClass;\n      }\n      return ptr;\n    };\n  var getInheritedInstance = (class_, ptr) => {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    };\n  \n  \n  var makeClassHandle = (prototype, record) => {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError('makeClassHandle requires ptr and ptrType');\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError('Both smartPtrType and smartPtr must be specified');\n      }\n      record.count = { value: 1 };\n      return attachFinalizer(Object.create(prototype, {\n        $$: {\n          value: record,\n          writable: true,\n        },\n      }));\n    };\n  /** @suppress {globalThis} */\n  function RegisteredPointer_fromWireType(ptr) {\n      // ptr is a raw pointer (or a raw smartpointer)\n  \n      // rawPointer is a maybe-null raw pointer\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n  \n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n      if (undefined !== registeredInstance) {\n        // JS object has been neutered, time to repopulate it\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance['clone']();\n        } else {\n          // else, just increment reference count on existing object\n          // it already has a reference to the smart pointer\n          var rv = registeredInstance['clone']();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n  \n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr,\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr,\n          });\n        }\n      }\n  \n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n  \n      var toType;\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(\n          rawPointer,\n          this.registeredClass,\n          toType.registeredClass);\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr,\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n        });\n      }\n    }\n  var attachFinalizer = (handle) => {\n      if ('undefined' === typeof FinalizationRegistry) {\n        attachFinalizer = (handle) => handle;\n        return handle;\n      }\n      // If the running environment has a FinalizationRegistry (see\n      // https://github.com/tc39/proposal-weakrefs), then attach finalizers\n      // for class handles.  We check for the presence of FinalizationRegistry\n      // at run-time, not build-time.\n      finalizationRegistry = new FinalizationRegistry((info) => {\n        console.warn(info.leakWarning.stack.replace(/^Error: /, ''));\n        releaseClassHandle(info.$$);\n      });\n      attachFinalizer = (handle) => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n          // We should not call the destructor on raw pointers in case other code expects the pointee to live\n          var info = { $$: $$ };\n          // Create a warning as an Error instance in advance so that we can store\n          // the current stacktrace and point to it when / if a leak is detected.\n          // This is more useful than the empty stacktrace of `FinalizationRegistry`\n          // callback.\n          var cls = $$.ptrType.registeredClass;\n          info.leakWarning = new Error(`Embind found a leaked C++ instance ${cls.name} <${ptrToString($$.ptr)}>.\\n` +\n          \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" +\n          \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" +\n          \"Originally allocated\"); // `.stack` will add \"at ...\" after this sentence\n          if ('captureStackTrace' in Error) {\n            Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);\n          }\n          finalizationRegistry.register(handle, info, handle);\n        }\n        return handle;\n      };\n      detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n      return attachFinalizer(handle);\n    };\n  \n  \n  \n  var init_ClassHandle = () => {\n      Object.assign(ClassHandle.prototype, {\n        \"isAliasOf\"(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n  \n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          other.$$ = /** @type {Object} */ (other.$$);\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n  \n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n  \n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n  \n          return leftClass === rightClass && left === right;\n        },\n  \n        \"clone\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n  \n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n              $$: {\n                value: shallowCopyInternalPointer(this.$$),\n              }\n            }));\n  \n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        },\n  \n        \"delete\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n  \n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n  \n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n  \n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = undefined;\n            this.$$.ptr = undefined;\n          }\n        },\n  \n        \"isDeleted\"() {\n          return !this.$$.ptr;\n        },\n  \n        \"deleteLater\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        },\n      });\n    };\n  /** @constructor */\n  function ClassHandle() {\n    }\n  \n  var createNamedFunction = (name, body) => Object.defineProperty(body, 'name', {\n      value: name\n    });\n  \n  \n  var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function(...args) {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\n            throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`);\n          }\n          return proto[methodName].overloadTable[args.length].apply(this, args);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n  \n  /** @param {number=} numArguments */\n  var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    };\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  var makeLegalFunctionName = (name) => {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return `_${name}`;\n      }\n      return name;\n    };\n  \n  \n  /** @constructor */\n  function RegisteredClass(name,\n                               constructor,\n                               instancePrototype,\n                               rawDestructor,\n                               baseClass,\n                               getActualType,\n                               upcast,\n                               downcast) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n  \n  \n  var upcastPointer = (ptr, ptrClass, desiredClass) => {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    };\n  /** @suppress {globalThis} */\n  function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n  \n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n  \n      if (!handle || !handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n  \n      if (this.isSmartPointer) {\n        // TODO: this is not strictly true\n        // We could support BY_EMVAL conversions from raw pointers to smart pointers\n        // because the smart pointer can hold a reference to the handle\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError('Passing raw pointer to smart pointer is illegal');\n        }\n  \n        switch (this.sharingPolicy) {\n          case 0: // NONE\n            // no upcasting\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n            }\n            break;\n  \n          case 1: // INTRUSIVE\n            ptr = handle.$$.smartPtr;\n            break;\n  \n          case 2: // BY_EMVAL\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle['clone']();\n              ptr = this.rawShare(\n                ptr,\n                Emval.toHandle(() => clonedHandle['delete']())\n              );\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n            break;\n  \n          default:\n            throwBindingError('Unsupporting sharing policy');\n        }\n      }\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (handle.$$.ptrType.isConst) {\n          throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function readPointer(pointer) {\n      return this['fromWireType'](HEAPU32[((pointer)>>2)]);\n    }\n  \n  \n  var init_RegisteredPointer = () => {\n      Object.assign(RegisteredPointer.prototype, {\n        getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        },\n        destructor(ptr) {\n          this.rawDestructor?.(ptr);\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        'fromWireType': RegisteredPointer_fromWireType,\n      });\n    };\n  /** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */\n  function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n  \n      // smart pointer properties\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n  \n      // smart pointer properties\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n  \n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this['toWireType'] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this['toWireType'] = genericPointerToWireType;\n        // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns\n        // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.\n        // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in\n        //       craftInvokerFunction altogether.\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistent public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n  \n  \n  \n  var dynCallLegacy = (sig, ptr, args) => {\n      sig = sig.replace(/p/g, 'i')\n      assert(('dynCall_' + sig) in Module, `bad function pointer type - dynCall function not found for sig '${sig}'`);\n      if (args?.length) {\n        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n        assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n      } else {\n        assert(sig.length == 1);\n      }\n      var f = Module['dynCall_' + sig];\n      return f(ptr, ...args);\n    };\n  \n  var wasmTableMirror = [];\n  \n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      assert(wasmTable.get(funcPtr) == func, 'JavaScript-side Wasm function table mirror is out of date!');\n      return func;\n    };\n  \n  var dynCall = (sig, ptr, args = []) => {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of their signature, so we rely on the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      assert(getWasmTableEntry(ptr), `missing table entry in dynCall: ${ptr}`);\n      var rtn = getWasmTableEntry(ptr)(...args);\n      return rtn;\n    };\n  var getDynCaller = (sig, ptr) => {\n      assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs')\n      return (...args) => dynCall(sig, ptr, args);\n    };\n  \n  \n  var embind__requireFunction = (signature, rawFunction) => {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n      }\n      return fp;\n    };\n  \n  \n  \n  var extendError = (baseErrorType, errorName) => {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return `${this.name}: ${this.message}`;\n        }\n      };\n  \n      return errorClass;\n    };\n  var UnboundTypeError;\n  \n  \n  \n  var getTypeName = (type) => {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    };\n  var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([', ']));\n    };\n  \n  var __embind_register_class = (rawType,\n                             rawPointerType,\n                             rawConstPointerType,\n                             baseClassRawType,\n                             getActualTypeSignature,\n                             getActualType,\n                             upcastSignature,\n                             upcast,\n                             downcastSignature,\n                             downcast,\n                             name,\n                             destructorSignature,\n                             rawDestructor) => {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n      upcast &&= embind__requireFunction(upcastSignature, upcast);\n      downcast &&= embind__requireFunction(downcastSignature, downcast);\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n  \n      exposePublicSymbol(legalFunctionName, function() {\n        // this code cannot run if baseClassRawType is zero\n        throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [baseClassRawType]);\n      });\n  \n      whenDependentTypesAreResolved(\n        [rawType, rawPointerType, rawConstPointerType],\n        baseClassRawType ? [baseClassRawType] : [],\n        (base) => {\n          base = base[0];\n  \n          var baseClass;\n          var basePrototype;\n          if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype;\n          } else {\n            basePrototype = ClassHandle.prototype;\n          }\n  \n          var constructor = createNamedFunction(name, function(...args) {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n              throw new BindingError(\"Use 'new' to construct \" + name);\n            }\n            if (undefined === registeredClass.constructor_body) {\n              throw new BindingError(name + \" has no accessible constructor\");\n            }\n            var body = registeredClass.constructor_body[args.length];\n            if (undefined === body) {\n              throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\n            }\n            return body.apply(this, args);\n          });\n  \n          var instancePrototype = Object.create(basePrototype, {\n            constructor: { value: constructor },\n          });\n  \n          constructor.prototype = instancePrototype;\n  \n          var registeredClass = new RegisteredClass(name,\n                                                    constructor,\n                                                    instancePrototype,\n                                                    rawDestructor,\n                                                    baseClass,\n                                                    getActualType,\n                                                    upcast,\n                                                    downcast);\n  \n          if (registeredClass.baseClass) {\n            // Keep track of class hierarchy. Used to allow sub-classes to inherit class functions.\n            registeredClass.baseClass.__derivedClasses ??= [];\n  \n            registeredClass.baseClass.__derivedClasses.push(registeredClass);\n          }\n  \n          var referenceConverter = new RegisteredPointer(name,\n                                                         registeredClass,\n                                                         true,\n                                                         false,\n                                                         false);\n  \n          var pointerConverter = new RegisteredPointer(name + '*',\n                                                       registeredClass,\n                                                       false,\n                                                       false,\n                                                       false);\n  \n          var constPointerConverter = new RegisteredPointer(name + ' const*',\n                                                            registeredClass,\n                                                            false,\n                                                            true,\n                                                            false);\n  \n          registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter\n          };\n  \n          replacePublicSymbol(legalFunctionName, constructor);\n  \n          return [referenceConverter, pointerConverter, constPointerConverter];\n        }\n      );\n    };\n\n  var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n        // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n        array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    };\n  \n  \n  var runDestructors = (destructors) => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n  \n  \n  \n  \n  \n  \n  \n  function usesDestructorStack(argTypes) {\n      // Skip return value at index 0 - it's not deleted here.\n      for (var i = 1; i < argTypes.length; ++i) {\n        // The type does not define a destructor function - must use dynamic stack\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n  \n  function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(`new_ called with constructor type ${typeof(constructor)} which is not a function`);\n      }\n      /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doubly-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }\n  \n  function createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\n      var needsDestructorStack = usesDestructorStack(argTypes);\n      var argCount = argTypes.length;\n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n        argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody = `\n        return function (${argsList}) {\n        if (arguments.length !== ${argCount - 2}) {\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${argCount - 2}');\n        }`;\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"humanName\", \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n  \n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam['toWireType'](\"+dtorStack+\", this);\\n\";\n      }\n  \n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\"['toWireType'](\"+dtorStack+\", arg\"+i+\");\\n\";\n        args1.push(\"argType\"+i);\n      }\n  \n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns || isAsync ? \"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      var returnVal = returns ? \"rv\" : \"\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n          var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\n            args1.push(`${paramName}_dtor`);\n          }\n        }\n      }\n  \n      if (returns) {\n        invokerFnBody += \"var ret = retType['fromWireType'](rv);\\n\" +\n                         \"return ret;\\n\";\n      } else {\n      }\n  \n      invokerFnBody += \"}\\n\";\n  \n      invokerFnBody = `if (arguments.length !== ${args1.length}){ throw new Error(humanName + \"Expected ${args1.length} closure arguments \" + arguments.length + \" given.\"); }\\n${invokerFnBody}`;\n      return [args1, invokerFnBody];\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      // isAsync: Optional. If true, returns an async function. Async bindings are only supported with JSPI.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = usesDestructorStack(argTypes);\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n    // Builld the arguments that will be passed into the closure around the invoker\n    // function.\n    var closureArgs = [humanName, throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n    for (var i = 0; i < argCount - 2; ++i) {\n      closureArgs.push(argTypes[i+2]);\n    }\n    if (!needsDestructorStack) {\n      for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n        if (argTypes[i].destructorFunction !== null) {\n          closureArgs.push(argTypes[i].destructorFunction);\n        }\n      }\n    }\n  \n    let [args, invokerFnBody] = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\n    args.push(invokerFnBody);\n    var invokerFn = newFunc(Function, args)(...closureArgs);\n      return createNamedFunction(humanName, invokerFn);\n    }\n  var __embind_register_class_constructor = (\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor\n    ) => {\n      assert(argCount > 0);\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      var args = [rawConstructor];\n      var destructors = [];\n  \n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `constructor ${classType.name}`;\n  \n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\n        };\n  \n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          // Insert empty slot for context type (argTypes[1]).\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n          return [];\n        });\n        return [];\n      });\n    };\n\n  \n  \n  \n  \n  \n  \n  var getFunctionName = (signature) => {\n      signature = signature.trim();\n      const argsIndex = signature.indexOf(\"(\");\n      if (argsIndex !== -1) {\n        assert(signature[signature.length - 1] == \")\", \"Parentheses for argument names should match.\");\n        return signature.substr(0, argsIndex);\n      } else {\n        return signature;\n      }\n    };\n  var __embind_register_class_function = (rawClassType,\n                                      methodName,\n                                      argCount,\n                                      rawArgTypesAddr, // [ReturnType, ThisType, Args...]\n                                      invokerSignature,\n                                      rawInvoker,\n                                      context,\n                                      isPureVirtual,\n                                      isAsync) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      methodName = getFunctionName(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n  \n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n  \n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n  \n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n  \n        function unboundTypesHandler() {\n          throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n        }\n  \n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\n          // This is the first overload to be registered, OR we are replacing a\n          // function in the base class with a function in the derived class.\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          // There was an existing function with the same name registered. Set up\n          // a function overload routing table.\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n  \n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n  \n          // Replace the initial unbound-handler-stub function with the\n          // appropriate member function, now that all types are resolved. If\n          // multiple overloads are registered for this function, the function\n          // goes into an overload table.\n          if (undefined === proto[methodName].overloadTable) {\n            // Set argCount in case an overload is registered later\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n  \n          return [];\n        });\n        return [];\n      });\n    };\n\n  \n  var emval_freelist = [];\n  \n  var emval_handles = [];\n  var __emval_decref = (handle) => {\n      if (handle > 9 && 0 === --emval_handles[handle + 1]) {\n        assert(emval_handles[handle] !== undefined, `Decref for unallocated handle.`);\n        emval_handles[handle] = undefined;\n        emval_freelist.push(handle);\n      }\n    };\n  \n  \n  \n  \n  \n  var count_emval_handles = () => {\n      return emval_handles.length / 2 - 5 - emval_freelist.length;\n    };\n  \n  var init_emval = () => {\n      // reserve 0 and some special values. These never get de-allocated.\n      emval_handles.push(\n        0, 1,\n        undefined, 1,\n        null, 1,\n        true, 1,\n        false, 1,\n      );\n      assert(emval_handles.length === 5 * 2);\n      Module['count_emval_handles'] = count_emval_handles;\n    };\n  var Emval = {\n  toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        // handle 2 is supposed to be `undefined`.\n        assert(handle === 2 || emval_handles[handle] !== undefined && handle % 2 === 0, `invalid handle: ${handle}`);\n        return emval_handles[handle];\n      },\n  toHandle:(value) => {\n        switch (value) {\n          case undefined: return 2;\n          case null: return 4;\n          case true: return 6;\n          case false: return 8;\n          default:{\n            const handle = emval_freelist.pop() || emval_handles.length;\n            emval_handles[handle] = value;\n            emval_handles[handle + 1] = 1;\n            return handle;\n          }\n        }\n      },\n  };\n  \n  \n  var EmValType = {\n      name: 'emscripten::val',\n      'fromWireType': (handle) => {\n        var rv = Emval.toValue(handle);\n        __emval_decref(handle);\n        return rv;\n      },\n      'toWireType': (destructors, value) => Emval.toHandle(value),\n      'argPackAdvance': GenericWireTypeSize,\n      'readValueFromPointer': readPointer,\n      destructorFunction: null, // This type does not need a destructor\n  \n      // TODO: do we need a deleteObject here?  write a test where\n      // emval is passed into JS via an interface\n    };\n  var __embind_register_emval = (rawType) => registerType(rawType, EmValType);\n\n  var embindRepr = (v) => {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    };\n  \n  var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n          case 4: return function(pointer) {\n              return this['fromWireType'](HEAPF32[((pointer)>>2)]);\n          };\n          case 8: return function(pointer) {\n              return this['fromWireType'](HEAPF64[((pointer)>>3)]);\n          };\n          default:\n              throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n  \n  \n  var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        'fromWireType': (value) => value,\n        'toWireType': (destructors, value) => {\n          if (typeof value != \"number\" && typeof value != \"boolean\") {\n            throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`);\n          }\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': floatReadValueFromPointer(name, size),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  var integerReadValueFromPointer = (name, width, signed) => {\n      // integers are quite common, so generate very specialized functions\n      switch (width) {\n          case 1: return signed ?\n              (pointer) => HEAP8[pointer] :\n              (pointer) => HEAPU8[pointer];\n          case 2: return signed ?\n              (pointer) => HEAP16[((pointer)>>1)] :\n              (pointer) => HEAPU16[((pointer)>>1)]\n          case 4: return signed ?\n              (pointer) => HEAP32[((pointer)>>2)] :\n              (pointer) => HEAPU32[((pointer)>>2)]\n          default:\n              throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n  \n  \n  /** @suppress {globalThis} */\n  var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n        var bitshift = 32 - 8*size;\n        fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n        if (typeof value != \"number\" && typeof value != \"boolean\") {\n          throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${toTypeName}`);\n        }\n        if (value < minRange || value > maxRange) {\n          throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\n        }\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': integerReadValueFromPointer(name, size, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        var size = HEAPU32[((handle)>>2)];\n        var data = HEAPU32[(((handle)+(4))>>2)];\n        return new TA(HEAP8.buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    };\n\n  \n  \n  \n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      assert(typeof str === 'string', `stringToUTF8Array expects a string (got ${typeof str})`);\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  \n  \n  var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name,\n        // For some method names we use string keys here since they are part of\n        // the public/external API and/or used by the runtime-generated code.\n        'fromWireType'(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType'(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes POINTER_SIZE alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n\n  \n  \n  \n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  var UTF16ToString = (ptr, maxBytesToRead) => {\n      assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    };\n  \n  var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      maxBytesToWrite ??= 0x7FFFFFFF;\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    };\n  \n  var lengthBytesUTF16 = (str) => {\n      return str.length*2;\n    };\n  \n  var UTF32ToString = (ptr, maxBytesToRead) => {\n      assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    };\n  \n  var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      maxBytesToWrite ??= 0x7FFFFFFF;\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    };\n  \n  var lengthBytesUTF32 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    };\n  var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, readCharAt, lengthBytesUTF;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        readCharAt = (pointer) => HEAPU16[((pointer)>>1)];\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        readCharAt = (pointer) => HEAPU32[((pointer)>>2)];\n      }\n      registerType(rawType, {\n        name,\n        'fromWireType': (value) => {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[((value)>>2)];\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || readCharAt(currentBytePtr) == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': (destructors, value) => {\n          if (!(typeof value == 'string')) {\n            throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n          }\n  \n          // assumes POINTER_SIZE alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[((ptr)>>2)] = length / charSize;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    };\n\n  \n  var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true, // void return values can be optimized out sometimes\n        name,\n        'argPackAdvance': 0,\n        'fromWireType': () => undefined,\n        // TODO: assert if anything else is given?\n        'toWireType': (destructors, o) => undefined,\n      });\n    };\n\n  var __emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  \n  \n  \n  var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\n      }\n      return impl;\n    };\n  \n  var emval_returnValue = (returnType, destructorsRef, handle) => {\n      var destructors = [];\n      var result = returnType['toWireType'](destructors, handle);\n      if (destructors.length) {\n        // void, primitives and any other types w/o destructors don't need to allocate a handle\n        HEAPU32[((destructorsRef)>>2)] = Emval.toHandle(destructors);\n      }\n      return result;\n    };\n  var __emval_as = (handle, returnType, destructorsRef) => {\n      handle = Emval.toValue(handle);\n      returnType = requireRegisteredType(returnType, 'emval::as');\n      return emval_returnValue(returnType, destructorsRef, handle);\n    };\n\n\n  var __emval_get_property = (handle, key) => {\n      handle = Emval.toValue(handle);\n      key = Emval.toValue(key);\n      return Emval.toHandle(handle[key]);\n    };\n\n  var emval_symbols = {\n  };\n  \n  var getStringOrSymbol = (address) => {\n      var symbol = emval_symbols[address];\n      if (symbol === undefined) {\n        return readLatin1String(address);\n      }\n      return symbol;\n    };\n  \n  var __emval_new_cstring = (v) => Emval.toHandle(getStringOrSymbol(v));\n\n  \n  \n  var __emval_run_destructors = (handle) => {\n      var destructors = Emval.toValue(handle);\n      runDestructors(destructors);\n      __emval_decref(handle);\n    };\n\n  \n  var __emval_take_value = (type, arg) => {\n      type = requireRegisteredType(type, '_emval_take_value');\n      var v = type['readValueFromPointer'](arg);\n      return Emval.toHandle(v);\n    };\n\n  var _abort = () => {\n      abort('native code called abort()');\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n        err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n      assert(requestedSize > oldSize);\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\n        return false;\n      }\n  \n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\n      return false;\n    };\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        assert(str.charCodeAt(i) === (str.charCodeAt(i) & 0xff));\n        HEAP8[buffer++] = str.charCodeAt(i);\n      }\n      // Null-terminate the string\n      HEAP8[buffer] = 0;\n    };\n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => bufSize += string.length + 1);\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  \n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      checkUnflushedContent();\n  \n      // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\n      if (keepRuntimeAlive() && !implicit) {\n        var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n        err(msg);\n      }\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n\n  var SYSCALLS = {\n  varargs:undefined,\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  };\n  var _fd_close = (fd) => {\n      abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n    };\n\n  var convertI32PairToI53Checked = (lo, hi) => {\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\n      assert(hi === (hi|0));                    // hi should be a i32\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    };\n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);\n  \n    \n      return 70;\n    ;\n  }\n\n  var printCharBuffers = [null,[],[]];\n  \n  var printChar = (stream, curr) => {\n      var buffer = printCharBuffers[stream];\n      assert(buffer);\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    };\n  \n  var flush_NO_FILESYSTEM = () => {\n      // flush anything remaining in the buffers during shutdown\n      _fflush(0);\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    };\n  \n  \n  var _fd_write = (fd, iov, iovcnt, pnum) => {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    };\n\nembind_init_charCodes();\nBindingError = Module['BindingError'] = class BindingError extends Error { constructor(message) { super(message); this.name = 'BindingError'; }};\nInternalError = Module['InternalError'] = class InternalError extends Error { constructor(message) { super(message); this.name = 'InternalError'; }};\ninit_ClassHandle();\ninit_embind();;\ninit_RegisteredPointer();\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\ninit_emval();;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  /** @export */\n  __assert_fail: ___assert_fail,\n  /** @export */\n  __cxa_throw: ___cxa_throw,\n  /** @export */\n  _embind_register_bigint: __embind_register_bigint,\n  /** @export */\n  _embind_register_bool: __embind_register_bool,\n  /** @export */\n  _embind_register_class: __embind_register_class,\n  /** @export */\n  _embind_register_class_constructor: __embind_register_class_constructor,\n  /** @export */\n  _embind_register_class_function: __embind_register_class_function,\n  /** @export */\n  _embind_register_emval: __embind_register_emval,\n  /** @export */\n  _embind_register_float: __embind_register_float,\n  /** @export */\n  _embind_register_integer: __embind_register_integer,\n  /** @export */\n  _embind_register_memory_view: __embind_register_memory_view,\n  /** @export */\n  _embind_register_std_string: __embind_register_std_string,\n  /** @export */\n  _embind_register_std_wstring: __embind_register_std_wstring,\n  /** @export */\n  _embind_register_void: __embind_register_void,\n  /** @export */\n  _emscripten_memcpy_js: __emscripten_memcpy_js,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _emval_as: __emval_as,\n  /** @export */\n  _emval_decref: __emval_decref,\n  /** @export */\n  _emval_get_property: __emval_get_property,\n  /** @export */\n  _emval_new_cstring: __emval_new_cstring,\n  /** @export */\n  _emval_run_destructors: __emval_run_destructors,\n  /** @export */\n  _emval_take_value: __emval_take_value,\n  /** @export */\n  abort: _abort,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  invoke_ii: invoke_ii,\n  /** @export */\n  invoke_iii: invoke_iii,\n  /** @export */\n  invoke_iiii: invoke_iiii,\n  /** @export */\n  invoke_iiiii: invoke_iiiii,\n  /** @export */\n  invoke_iiiiiiii: invoke_iiiiiiii,\n  /** @export */\n  invoke_iiiiiiiiii: invoke_iiiiiiiiii,\n  /** @export */\n  invoke_iji: invoke_iji,\n  /** @export */\n  invoke_vi: invoke_vi,\n  /** @export */\n  invoke_vidd: invoke_vidd,\n  /** @export */\n  invoke_vii: invoke_vii,\n  /** @export */\n  invoke_viii: invoke_viii,\n  /** @export */\n  invoke_viiii: invoke_viiii\n};\nvar wasmExports = createWasm();\nvar ___wasm_call_ctors = createExportWrapper('__wasm_call_ctors', 0);\nvar _fflush = createExportWrapper('fflush', 1);\nvar _malloc = createExportWrapper('malloc', 1);\nvar _free = createExportWrapper('free', 1);\nvar ___getTypeName = createExportWrapper('__getTypeName', 1);\nvar _setThrew = createExportWrapper('setThrew', 2);\nvar __emscripten_tempret_set = createExportWrapper('_emscripten_tempret_set', 1);\nvar _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports['emscripten_stack_init'])();\nvar _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports['emscripten_stack_get_free'])();\nvar _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports['emscripten_stack_get_base'])();\nvar _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports['emscripten_stack_get_end'])();\nvar __emscripten_stack_restore = (a0) => (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(a0);\nvar __emscripten_stack_alloc = (a0) => (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'])();\nvar ___cxa_is_pointer_type = createExportWrapper('__cxa_is_pointer_type', 1);\nvar dynCall_iji = Module['dynCall_iji'] = createExportWrapper('dynCall_iji', 4);\nvar dynCall_jiiiii = Module['dynCall_jiiiii'] = createExportWrapper('dynCall_jiiiii', 6);\nvar dynCall_jiji = Module['dynCall_jiji'] = createExportWrapper('dynCall_jiji', 5);\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vidd(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iji(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iji(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nvar missingLibrarySymbols = [\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertU32PairToI53',\n  'stackAlloc',\n  'getTempRet0',\n  'setTempRet0',\n  'zeroMemory',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'initRandomFill',\n  'randomFill',\n  'emscriptenLog',\n  'readEmAsmArgs',\n  'jstoi_q',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'HandleAllocator',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'getCFunc',\n  'ccall',\n  'cwrap',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToNewUTF8',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'jsStackTrace',\n  'getCallstack',\n  'convertPCtoSourceLocation',\n  'checkWasiClock',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'safeSetTimeout',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'idsToPromises',\n  'makePromiseCallback',\n  'findMatchingCatch',\n  'Browser_asyncPrepareDataCounter',\n  'setMainLoop',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'FS_createPreloadedFile',\n  'FS_modeStringToFlags',\n  'FS_getMode',\n  'FS_stdin_getChar',\n  'FS_createDataFile',\n  'FS_unlink',\n  'FS_mkdirTree',\n  '_setNetworkCallback',\n  'heapObjectForWebGLType',\n  'toTypedArrayIndex',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'setErrNo',\n  'demangle',\n  'stackTrace',\n  'getFunctionArgsName',\n  'createJsInvokerSignature',\n  'registerInheritedInstance',\n  'unregisterInheritedInstance',\n  'enumReadValueFromPointer',\n  'validateThis',\n  'emval_get_global',\n  'emval_lookupTypes',\n  'emval_addMethodCaller',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_readFile',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'wasmMemory',\n  'wasmExports',\n  'writeStackCookie',\n  'checkStackCookie',\n  'convertI32PairToI53Checked',\n  'stackSave',\n  'stackRestore',\n  'ptrToString',\n  'exitJS',\n  'getHeapMax',\n  'growMemory',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'timers',\n  'warnOnce',\n  'readEmAsmArgsArray',\n  'jstoi_s',\n  'getExecutableName',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'keepRuntimeAlive',\n  'wasmTable',\n  'noExitRuntime',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'stringToAscii',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'JSEvents',\n  'specialHTMLTargets',\n  'findCanvasEventTarget',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'UNWIND_CACHE',\n  'ExitStatus',\n  'getEnvStrings',\n  'flush_NO_FILESYSTEM',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'ExceptionInfo',\n  'Browser',\n  'getPreloadedImageData__data',\n  'wget',\n  'SYSCALLS',\n  'preloadPlugins',\n  'FS_stdin_getChar_buffer',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'GL',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'InternalError',\n  'BindingError',\n  'throwInternalError',\n  'throwBindingError',\n  'registeredTypes',\n  'awaitingDependencies',\n  'typeDependencies',\n  'tupleRegistrations',\n  'structRegistrations',\n  'sharedRegisterType',\n  'whenDependentTypesAreResolved',\n  'embind_charCodes',\n  'embind_init_charCodes',\n  'readLatin1String',\n  'getTypeName',\n  'getFunctionName',\n  'heap32VectorToArray',\n  'requireRegisteredType',\n  'usesDestructorStack',\n  'createJsInvoker',\n  'UnboundTypeError',\n  'PureVirtualError',\n  'GenericWireTypeSize',\n  'EmValType',\n  'init_embind',\n  'throwUnboundTypeError',\n  'ensureOverloadTable',\n  'exposePublicSymbol',\n  'replacePublicSymbol',\n  'extendError',\n  'createNamedFunction',\n  'embindRepr',\n  'registeredInstances',\n  'getBasestPointer',\n  'getInheritedInstance',\n  'getInheritedInstanceCount',\n  'getLiveInheritedInstances',\n  'registeredPointers',\n  'registerType',\n  'integerReadValueFromPointer',\n  'floatReadValueFromPointer',\n  'readPointer',\n  'runDestructors',\n  'newFunc',\n  'craftInvokerFunction',\n  'embind__requireFunction',\n  'genericPointerToWireType',\n  'constNoSmartPtrRawPointerToWireType',\n  'nonConstNoSmartPtrRawPointerToWireType',\n  'init_RegisteredPointer',\n  'RegisteredPointer',\n  'RegisteredPointer_fromWireType',\n  'runDestructor',\n  'releaseClassHandle',\n  'finalizationRegistry',\n  'detachFinalizer_deps',\n  'detachFinalizer',\n  'attachFinalizer',\n  'makeClassHandle',\n  'init_ClassHandle',\n  'ClassHandle',\n  'throwInstanceAlreadyDeleted',\n  'deletionQueue',\n  'flushPendingDeletes',\n  'delayFunction',\n  'setDelayFunction',\n  'RegisteredClass',\n  'shallowCopyInternalPointer',\n  'downcastPointer',\n  'upcastPointer',\n  'char_0',\n  'char_9',\n  'makeLegalFunctionName',\n  'emval_freelist',\n  'emval_handles',\n  'emval_symbols',\n  'init_emval',\n  'count_emval_handles',\n  'getStringOrSymbol',\n  'Emval',\n  'emval_returnValue',\n  'emval_methodCallers',\n  'reflectConstruct',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run() {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n// end include: postamble.js\n\n", "const readFileAsArrayBuffer = (file: File): Promise<ArrayBuffer> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = () => reject(reader.error);\n    reader.readAsArrayBuffer(file);\n  });\n};\n\n// Function to handle the conversion of the image\nconst handleConvert = async (file: File | null, quality: number): Promise<string> => {\n  if (!file) return '';\n\n  if (quality < 0 || quality > 100) return '';\n\n  console.log('Conversion started');\n\n  try {\n\n    const arrayBuffer = await readFileAsArrayBuffer(file);\n    console.log('File read as array buffer');\n\n    const bytes = new Uint8Array(arrayBuffer);\n    console.log('File converted to Uint8Array');\n\n    const Module = require('./webp_converter.js');\n    const converter = new Module.WEBPConverter(bytes, quality);\n    const output = converter.convertImage();\n    console.log('Image converted');\n\n    const blob = new Blob([output], { type: 'image/webp' });\n    const url = URL.createObjectURL(blob);\n    console.log('Image conversion successful, URL created');\n    console.log('Conversion ended');\n\n    return url;\n  } catch (error) {\n    console.error('Error converting image:', error);\n    return '';\n  }\n};\n\nexport { readFileAsArrayBuffer, handleConvert };\n"],
  "mappings": "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AAM;AACrB,kBAAU,GAAG,CAAC;AAAA,MAChB;AAAA,IACF;AAMA,QAAI,wBAAwsB,QAAQ,oBAAoB;AAElD,QAAI,oBAAoB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA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",
  "names": ["err", "module", "typeConverters", "handle"]
}
