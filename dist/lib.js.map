{
  "version": 3,
  "sources": ["../src/webp_converter.js", "../src/lib.ts"],
  "sourcesContent": ["// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\n  var minVersion = 160000;\n  if (numericVersion < 160000) {\n    throw new Error('This emscripten-generated code requires node v16.0.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror, binary = true) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : 'utf8', (err, data) => {\n    if (err) onerror(err);\n    else onload(binary ? data.buffer : data);\n  });\n};\n// end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process.argv.slice(2);\n\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process.on('uncaughtException', (ex) => {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.startsWith('blob:')) {\n    scriptDirectory = '';\n  } else {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/')+1);\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('asm', 'wasmExports');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar FETCHFS = 'FETCHFS is no longer included by default; build with -lfetchfs.js';\nvar ICASEFS = 'ICASEFS is no longer included by default; build with -licasefs.js';\nvar JSFILEFS = 'JSFILEFS is no longer included by default; build with -ljsfilefs.js';\nvar OPFS = 'OPFS is no longer included by default; build with -lopfs.js';\n\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, 'shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.');\n\n// end include: shell.js\n\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary; \nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\n\nif (typeof WebAssembly != 'object') {\n  err('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\n// include: runtime_shared.js\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n// end include: runtime_shared.js\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with SAFE_HEAP and ASAN which also\n  // monitor writes to address zero.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[((0)>>2)] = 1668509029;\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[((0)>>2)] != 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(() => {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err(`dependency: ${dep}`);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init() { FS.error() },\n  createDataFile() { FS.error() },\n  createPreloadedFile() { FS.error() },\n  createLazyFile() { FS.error() },\n  open() { FS.error() },\n  mkdev() { FS.error() },\n  registerDevice() { FS.error() },\n  analyzePath() { FS.error() },\n\n  ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n// end include: URIUtils.js\nfunction createExportWrapper(name, nargs) {\n  return (...args) => {\n    assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\n    var f = wasmExports[name];\n    assert(f, `exported native function \\`${name}\\` not found`);\n    // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.\n    assert(args.length <= nargs, `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);\n    return f(...args);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'webp_converter.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw 'both async and sync fetching of the wasm failed';\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(binaryFile)\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n        if (!response['ok']) {\n          throw `failed to load wasm binary file at '${binaryFile}'`;\n        }\n        return response['arrayBuffer']();\n      }).catch(() => getBinarySync(binaryFile));\n    }\n    else if (readAsync) {\n      // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n      return new Promise((resolve, reject) => {\n        readAsync(binaryFile, (response) => resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))), reject)\n      });\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then((binary) => {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(receiver, (reason) => {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n      !isFileURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err(`wasm streaming compile failed: ${reason}`);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  }\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    assert(wasmMemory, 'memory not found in wasm exports');\n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n    assert(wasmTable, 'table not found in wasm exports');\n\n    addOnInit(wasmExports['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\n        return false;\n    }\n  }\n\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName, incoming=true) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get() {\n        let extra = incoming ? ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)' : '';\n        abort(`\\`Module.${prop}\\` has been replaced by \\`${newName}\\`` + extra);\n\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis != 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get() {\n        warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\nmissingGlobal('asm', 'Please use wasmExports instead');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis != 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS library is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get() {\n        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(...args) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as warnings.\n  console.warn(...args);\n}\n// end include: runtime_debug.js\n// === Body ===\n// end include: preamble.js\n\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[ptr];\n      case 'i8': return HEAP8[ptr];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = Module['noExitRuntime'] || true;\n\n  var ptrToString = (ptr) => {\n      assert(typeof ptr === 'number');\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      ptr >>>= 0;\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[ptr] = value; break;\n      case 'i8': HEAP8[ptr] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  var stackRestore = (val) => __emscripten_stack_restore(val);\n\n  var stackSave = () => _emscripten_stack_get_current();\n\n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    };\n\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      assert(typeof ptr == 'number', `UTF8ToString expects a number (got ${typeof ptr})`);\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var ___assert_fail = (condition, filename, line, func) => {\n      abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    };\n\n  class ExceptionInfo {\n      // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\n      constructor(excPtr) {\n        this.excPtr = excPtr;\n        this.ptr = excPtr - 24;\n      }\n  \n      set_type(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      }\n  \n      get_type() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      }\n  \n      set_destructor(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      }\n  \n      get_destructor() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      }\n  \n      set_caught(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(this.ptr)+(12)] = caught;\n      }\n  \n      get_caught() {\n        return HEAP8[(this.ptr)+(12)] != 0;\n      }\n  \n      set_rethrown(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(this.ptr)+(13)] = rethrown;\n      }\n  \n      get_rethrown() {\n        return HEAP8[(this.ptr)+(13)] != 0;\n      }\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      init(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      }\n  \n      set_adjusted_ptr(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      }\n  \n      get_adjusted_ptr() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      }\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      get_exception_ptr() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      }\n    }\n  \n  var exceptionLast = 0;\n  \n  var uncaughtExceptionCount = 0;\n  var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      assert(false, 'Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.');\n    };\n\n  var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {};\n\n  var embind_init_charCodes = () => {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    };\n  var embind_charCodes;\n  var readLatin1String = (ptr) => {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    };\n  \n  var awaitingDependencies = {\n  };\n  \n  var registeredTypes = {\n  };\n  \n  var typeDependencies = {\n  };\n  \n  var BindingError;\n  var throwBindingError = (message) => { throw new BindingError(message); };\n  \n  \n  \n  \n  var InternalError;\n  var throwInternalError = (message) => { throw new InternalError(message); };\n  var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n  /** @param {Object=} options */\n  function sharedRegisterType(rawType, registeredInstance, options = {}) {\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n        throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n  \n  var GenericWireTypeSize = 8;\n  /** @suppress {globalThis} */\n  var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': GenericWireTypeSize,\n          'readValueFromPointer': function(pointer) {\n              return this['fromWireType'](HEAPU8[pointer]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  \n  var shallowCopyInternalPointer = (o) => {\n      return {\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType,\n      };\n    };\n  \n  var throwInstanceAlreadyDeleted = (obj) => {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');\n    };\n  \n  var finalizationRegistry = false;\n  \n  var detachFinalizer = (handle) => {};\n  \n  var runDestructor = ($$) => {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    };\n  var releaseClassHandle = ($$) => {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n        runDestructor($$);\n      }\n    };\n  \n  var downcastPointer = (ptr, ptrClass, desiredClass) => {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n        return null; // no conversion\n      }\n  \n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n        return null;\n      }\n      return desiredClass.downcast(rv);\n    };\n  \n  var registeredPointers = {\n  };\n  \n  var getInheritedInstanceCount = () => Object.keys(registeredInstances).length;\n  \n  var getLiveInheritedInstances = () => {\n      var rv = [];\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n      return rv;\n    };\n  \n  var deletionQueue = [];\n  var flushPendingDeletes = () => {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj['delete']();\n      }\n    };\n  \n  var delayFunction;\n  \n  \n  var setDelayFunction = (fn) => {\n      delayFunction = fn;\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    };\n  var init_embind = () => {\n      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;\n      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;\n      Module['flushPendingDeletes'] = flushPendingDeletes;\n      Module['setDelayFunction'] = setDelayFunction;\n    };\n  var registeredInstances = {\n  };\n  \n  var getBasestPointer = (class_, ptr) => {\n      if (ptr === undefined) {\n          throwBindingError('ptr should not be undefined');\n      }\n      while (class_.baseClass) {\n          ptr = class_.upcast(ptr);\n          class_ = class_.baseClass;\n      }\n      return ptr;\n    };\n  var getInheritedInstance = (class_, ptr) => {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    };\n  \n  \n  var makeClassHandle = (prototype, record) => {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError('makeClassHandle requires ptr and ptrType');\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError('Both smartPtrType and smartPtr must be specified');\n      }\n      record.count = { value: 1 };\n      return attachFinalizer(Object.create(prototype, {\n        $$: {\n          value: record,\n          writable: true,\n        },\n      }));\n    };\n  /** @suppress {globalThis} */\n  function RegisteredPointer_fromWireType(ptr) {\n      // ptr is a raw pointer (or a raw smartpointer)\n  \n      // rawPointer is a maybe-null raw pointer\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n  \n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n      if (undefined !== registeredInstance) {\n        // JS object has been neutered, time to repopulate it\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance['clone']();\n        } else {\n          // else, just increment reference count on existing object\n          // it already has a reference to the smart pointer\n          var rv = registeredInstance['clone']();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n  \n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr,\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr,\n          });\n        }\n      }\n  \n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n  \n      var toType;\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(\n          rawPointer,\n          this.registeredClass,\n          toType.registeredClass);\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr,\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n        });\n      }\n    }\n  var attachFinalizer = (handle) => {\n      if ('undefined' === typeof FinalizationRegistry) {\n        attachFinalizer = (handle) => handle;\n        return handle;\n      }\n      // If the running environment has a FinalizationRegistry (see\n      // https://github.com/tc39/proposal-weakrefs), then attach finalizers\n      // for class handles.  We check for the presence of FinalizationRegistry\n      // at run-time, not build-time.\n      finalizationRegistry = new FinalizationRegistry((info) => {\n        console.warn(info.leakWarning.stack.replace(/^Error: /, ''));\n        releaseClassHandle(info.$$);\n      });\n      attachFinalizer = (handle) => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n          // We should not call the destructor on raw pointers in case other code expects the pointee to live\n          var info = { $$: $$ };\n          // Create a warning as an Error instance in advance so that we can store\n          // the current stacktrace and point to it when / if a leak is detected.\n          // This is more useful than the empty stacktrace of `FinalizationRegistry`\n          // callback.\n          var cls = $$.ptrType.registeredClass;\n          info.leakWarning = new Error(`Embind found a leaked C++ instance ${cls.name} <${ptrToString($$.ptr)}>.\\n` +\n          \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" +\n          \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" +\n          \"Originally allocated\"); // `.stack` will add \"at ...\" after this sentence\n          if ('captureStackTrace' in Error) {\n            Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);\n          }\n          finalizationRegistry.register(handle, info, handle);\n        }\n        return handle;\n      };\n      detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n      return attachFinalizer(handle);\n    };\n  \n  \n  \n  var init_ClassHandle = () => {\n      Object.assign(ClassHandle.prototype, {\n        \"isAliasOf\"(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n  \n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          other.$$ = /** @type {Object} */ (other.$$);\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n  \n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n  \n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n  \n          return leftClass === rightClass && left === right;\n        },\n  \n        \"clone\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n  \n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n              $$: {\n                value: shallowCopyInternalPointer(this.$$),\n              }\n            }));\n  \n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        },\n  \n        \"delete\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n  \n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n  \n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n  \n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = undefined;\n            this.$$.ptr = undefined;\n          }\n        },\n  \n        \"isDeleted\"() {\n          return !this.$$.ptr;\n        },\n  \n        \"deleteLater\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        },\n      });\n    };\n  /** @constructor */\n  function ClassHandle() {\n    }\n  \n  var createNamedFunction = (name, body) => Object.defineProperty(body, 'name', {\n      value: name\n    });\n  \n  \n  var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function(...args) {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\n            throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`);\n          }\n          return proto[methodName].overloadTable[args.length].apply(this, args);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n  \n  /** @param {number=} numArguments */\n  var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    };\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  var makeLegalFunctionName = (name) => {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return `_${name}`;\n      }\n      return name;\n    };\n  \n  \n  /** @constructor */\n  function RegisteredClass(name,\n                               constructor,\n                               instancePrototype,\n                               rawDestructor,\n                               baseClass,\n                               getActualType,\n                               upcast,\n                               downcast) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n  \n  \n  var upcastPointer = (ptr, ptrClass, desiredClass) => {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    };\n  /** @suppress {globalThis} */\n  function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n  \n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n  \n      if (!handle || !handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n  \n      if (this.isSmartPointer) {\n        // TODO: this is not strictly true\n        // We could support BY_EMVAL conversions from raw pointers to smart pointers\n        // because the smart pointer can hold a reference to the handle\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError('Passing raw pointer to smart pointer is illegal');\n        }\n  \n        switch (this.sharingPolicy) {\n          case 0: // NONE\n            // no upcasting\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n            }\n            break;\n  \n          case 1: // INTRUSIVE\n            ptr = handle.$$.smartPtr;\n            break;\n  \n          case 2: // BY_EMVAL\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle['clone']();\n              ptr = this.rawShare(\n                ptr,\n                Emval.toHandle(() => clonedHandle['delete']())\n              );\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n            break;\n  \n          default:\n            throwBindingError('Unsupporting sharing policy');\n        }\n      }\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (handle.$$.ptrType.isConst) {\n          throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function readPointer(pointer) {\n      return this['fromWireType'](HEAPU32[((pointer)>>2)]);\n    }\n  \n  \n  var init_RegisteredPointer = () => {\n      Object.assign(RegisteredPointer.prototype, {\n        getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        },\n        destructor(ptr) {\n          this.rawDestructor?.(ptr);\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        'fromWireType': RegisteredPointer_fromWireType,\n      });\n    };\n  /** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */\n  function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n  \n      // smart pointer properties\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n  \n      // smart pointer properties\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n  \n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this['toWireType'] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this['toWireType'] = genericPointerToWireType;\n        // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns\n        // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.\n        // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in\n        //       craftInvokerFunction altogether.\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistent public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n  \n  \n  \n  var dynCallLegacy = (sig, ptr, args) => {\n      sig = sig.replace(/p/g, 'i')\n      assert(('dynCall_' + sig) in Module, `bad function pointer type - dynCall function not found for sig '${sig}'`);\n      if (args?.length) {\n        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n        assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n      } else {\n        assert(sig.length == 1);\n      }\n      var f = Module['dynCall_' + sig];\n      return f(ptr, ...args);\n    };\n  \n  var wasmTableMirror = [];\n  \n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      assert(wasmTable.get(funcPtr) == func, 'JavaScript-side Wasm function table mirror is out of date!');\n      return func;\n    };\n  \n  var dynCall = (sig, ptr, args = []) => {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of their signature, so we rely on the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      assert(getWasmTableEntry(ptr), `missing table entry in dynCall: ${ptr}`);\n      var rtn = getWasmTableEntry(ptr)(...args);\n      return rtn;\n    };\n  var getDynCaller = (sig, ptr) => {\n      assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs')\n      return (...args) => dynCall(sig, ptr, args);\n    };\n  \n  \n  var embind__requireFunction = (signature, rawFunction) => {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n      }\n      return fp;\n    };\n  \n  \n  \n  var extendError = (baseErrorType, errorName) => {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return `${this.name}: ${this.message}`;\n        }\n      };\n  \n      return errorClass;\n    };\n  var UnboundTypeError;\n  \n  \n  \n  var getTypeName = (type) => {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    };\n  var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([', ']));\n    };\n  \n  var __embind_register_class = (rawType,\n                             rawPointerType,\n                             rawConstPointerType,\n                             baseClassRawType,\n                             getActualTypeSignature,\n                             getActualType,\n                             upcastSignature,\n                             upcast,\n                             downcastSignature,\n                             downcast,\n                             name,\n                             destructorSignature,\n                             rawDestructor) => {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n      upcast &&= embind__requireFunction(upcastSignature, upcast);\n      downcast &&= embind__requireFunction(downcastSignature, downcast);\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n  \n      exposePublicSymbol(legalFunctionName, function() {\n        // this code cannot run if baseClassRawType is zero\n        throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [baseClassRawType]);\n      });\n  \n      whenDependentTypesAreResolved(\n        [rawType, rawPointerType, rawConstPointerType],\n        baseClassRawType ? [baseClassRawType] : [],\n        (base) => {\n          base = base[0];\n  \n          var baseClass;\n          var basePrototype;\n          if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype;\n          } else {\n            basePrototype = ClassHandle.prototype;\n          }\n  \n          var constructor = createNamedFunction(name, function(...args) {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n              throw new BindingError(\"Use 'new' to construct \" + name);\n            }\n            if (undefined === registeredClass.constructor_body) {\n              throw new BindingError(name + \" has no accessible constructor\");\n            }\n            var body = registeredClass.constructor_body[args.length];\n            if (undefined === body) {\n              throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\n            }\n            return body.apply(this, args);\n          });\n  \n          var instancePrototype = Object.create(basePrototype, {\n            constructor: { value: constructor },\n          });\n  \n          constructor.prototype = instancePrototype;\n  \n          var registeredClass = new RegisteredClass(name,\n                                                    constructor,\n                                                    instancePrototype,\n                                                    rawDestructor,\n                                                    baseClass,\n                                                    getActualType,\n                                                    upcast,\n                                                    downcast);\n  \n          if (registeredClass.baseClass) {\n            // Keep track of class hierarchy. Used to allow sub-classes to inherit class functions.\n            registeredClass.baseClass.__derivedClasses ??= [];\n  \n            registeredClass.baseClass.__derivedClasses.push(registeredClass);\n          }\n  \n          var referenceConverter = new RegisteredPointer(name,\n                                                         registeredClass,\n                                                         true,\n                                                         false,\n                                                         false);\n  \n          var pointerConverter = new RegisteredPointer(name + '*',\n                                                       registeredClass,\n                                                       false,\n                                                       false,\n                                                       false);\n  \n          var constPointerConverter = new RegisteredPointer(name + ' const*',\n                                                            registeredClass,\n                                                            false,\n                                                            true,\n                                                            false);\n  \n          registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter\n          };\n  \n          replacePublicSymbol(legalFunctionName, constructor);\n  \n          return [referenceConverter, pointerConverter, constPointerConverter];\n        }\n      );\n    };\n\n  var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n        // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n        array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    };\n  \n  \n  var runDestructors = (destructors) => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n  \n  \n  \n  \n  \n  \n  \n  function usesDestructorStack(argTypes) {\n      // Skip return value at index 0 - it's not deleted here.\n      for (var i = 1; i < argTypes.length; ++i) {\n        // The type does not define a destructor function - must use dynamic stack\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n  \n  function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(`new_ called with constructor type ${typeof(constructor)} which is not a function`);\n      }\n      /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doubly-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }\n  \n  function createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\n      var needsDestructorStack = usesDestructorStack(argTypes);\n      var argCount = argTypes.length;\n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n        argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody = `\n        return function (${argsList}) {\n        if (arguments.length !== ${argCount - 2}) {\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${argCount - 2}');\n        }`;\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"humanName\", \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n  \n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam['toWireType'](\"+dtorStack+\", this);\\n\";\n      }\n  \n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\"['toWireType'](\"+dtorStack+\", arg\"+i+\");\\n\";\n        args1.push(\"argType\"+i);\n      }\n  \n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns || isAsync ? \"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      var returnVal = returns ? \"rv\" : \"\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n          var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\n            args1.push(`${paramName}_dtor`);\n          }\n        }\n      }\n  \n      if (returns) {\n        invokerFnBody += \"var ret = retType['fromWireType'](rv);\\n\" +\n                         \"return ret;\\n\";\n      } else {\n      }\n  \n      invokerFnBody += \"}\\n\";\n  \n      invokerFnBody = `if (arguments.length !== ${args1.length}){ throw new Error(humanName + \"Expected ${args1.length} closure arguments \" + arguments.length + \" given.\"); }\\n${invokerFnBody}`;\n      return [args1, invokerFnBody];\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      // isAsync: Optional. If true, returns an async function. Async bindings are only supported with JSPI.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = usesDestructorStack(argTypes);\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n    // Builld the arguments that will be passed into the closure around the invoker\n    // function.\n    var closureArgs = [humanName, throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n    for (var i = 0; i < argCount - 2; ++i) {\n      closureArgs.push(argTypes[i+2]);\n    }\n    if (!needsDestructorStack) {\n      for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n        if (argTypes[i].destructorFunction !== null) {\n          closureArgs.push(argTypes[i].destructorFunction);\n        }\n      }\n    }\n  \n    let [args, invokerFnBody] = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\n    args.push(invokerFnBody);\n    var invokerFn = newFunc(Function, args)(...closureArgs);\n      return createNamedFunction(humanName, invokerFn);\n    }\n  var __embind_register_class_constructor = (\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor\n    ) => {\n      assert(argCount > 0);\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      var args = [rawConstructor];\n      var destructors = [];\n  \n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `constructor ${classType.name}`;\n  \n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\n        };\n  \n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          // Insert empty slot for context type (argTypes[1]).\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n          return [];\n        });\n        return [];\n      });\n    };\n\n  \n  \n  \n  \n  \n  \n  var getFunctionName = (signature) => {\n      signature = signature.trim();\n      const argsIndex = signature.indexOf(\"(\");\n      if (argsIndex !== -1) {\n        assert(signature[signature.length - 1] == \")\", \"Parentheses for argument names should match.\");\n        return signature.substr(0, argsIndex);\n      } else {\n        return signature;\n      }\n    };\n  var __embind_register_class_function = (rawClassType,\n                                      methodName,\n                                      argCount,\n                                      rawArgTypesAddr, // [ReturnType, ThisType, Args...]\n                                      invokerSignature,\n                                      rawInvoker,\n                                      context,\n                                      isPureVirtual,\n                                      isAsync) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      methodName = getFunctionName(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n  \n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n  \n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n  \n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n  \n        function unboundTypesHandler() {\n          throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n        }\n  \n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\n          // This is the first overload to be registered, OR we are replacing a\n          // function in the base class with a function in the derived class.\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          // There was an existing function with the same name registered. Set up\n          // a function overload routing table.\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n  \n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n  \n          // Replace the initial unbound-handler-stub function with the\n          // appropriate member function, now that all types are resolved. If\n          // multiple overloads are registered for this function, the function\n          // goes into an overload table.\n          if (undefined === proto[methodName].overloadTable) {\n            // Set argCount in case an overload is registered later\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n  \n          return [];\n        });\n        return [];\n      });\n    };\n\n  \n  var emval_freelist = [];\n  \n  var emval_handles = [];\n  var __emval_decref = (handle) => {\n      if (handle > 9 && 0 === --emval_handles[handle + 1]) {\n        assert(emval_handles[handle] !== undefined, `Decref for unallocated handle.`);\n        emval_handles[handle] = undefined;\n        emval_freelist.push(handle);\n      }\n    };\n  \n  \n  \n  \n  \n  var count_emval_handles = () => {\n      return emval_handles.length / 2 - 5 - emval_freelist.length;\n    };\n  \n  var init_emval = () => {\n      // reserve 0 and some special values. These never get de-allocated.\n      emval_handles.push(\n        0, 1,\n        undefined, 1,\n        null, 1,\n        true, 1,\n        false, 1,\n      );\n      assert(emval_handles.length === 5 * 2);\n      Module['count_emval_handles'] = count_emval_handles;\n    };\n  var Emval = {\n  toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        // handle 2 is supposed to be `undefined`.\n        assert(handle === 2 || emval_handles[handle] !== undefined && handle % 2 === 0, `invalid handle: ${handle}`);\n        return emval_handles[handle];\n      },\n  toHandle:(value) => {\n        switch (value) {\n          case undefined: return 2;\n          case null: return 4;\n          case true: return 6;\n          case false: return 8;\n          default:{\n            const handle = emval_freelist.pop() || emval_handles.length;\n            emval_handles[handle] = value;\n            emval_handles[handle + 1] = 1;\n            return handle;\n          }\n        }\n      },\n  };\n  \n  \n  var EmValType = {\n      name: 'emscripten::val',\n      'fromWireType': (handle) => {\n        var rv = Emval.toValue(handle);\n        __emval_decref(handle);\n        return rv;\n      },\n      'toWireType': (destructors, value) => Emval.toHandle(value),\n      'argPackAdvance': GenericWireTypeSize,\n      'readValueFromPointer': readPointer,\n      destructorFunction: null, // This type does not need a destructor\n  \n      // TODO: do we need a deleteObject here?  write a test where\n      // emval is passed into JS via an interface\n    };\n  var __embind_register_emval = (rawType) => registerType(rawType, EmValType);\n\n  var embindRepr = (v) => {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    };\n  \n  var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n          case 4: return function(pointer) {\n              return this['fromWireType'](HEAPF32[((pointer)>>2)]);\n          };\n          case 8: return function(pointer) {\n              return this['fromWireType'](HEAPF64[((pointer)>>3)]);\n          };\n          default:\n              throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n  \n  \n  var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        'fromWireType': (value) => value,\n        'toWireType': (destructors, value) => {\n          if (typeof value != \"number\" && typeof value != \"boolean\") {\n            throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`);\n          }\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': floatReadValueFromPointer(name, size),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  var integerReadValueFromPointer = (name, width, signed) => {\n      // integers are quite common, so generate very specialized functions\n      switch (width) {\n          case 1: return signed ?\n              (pointer) => HEAP8[pointer] :\n              (pointer) => HEAPU8[pointer];\n          case 2: return signed ?\n              (pointer) => HEAP16[((pointer)>>1)] :\n              (pointer) => HEAPU16[((pointer)>>1)]\n          case 4: return signed ?\n              (pointer) => HEAP32[((pointer)>>2)] :\n              (pointer) => HEAPU32[((pointer)>>2)]\n          default:\n              throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n  \n  \n  /** @suppress {globalThis} */\n  var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n        var bitshift = 32 - 8*size;\n        fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n        if (typeof value != \"number\" && typeof value != \"boolean\") {\n          throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${toTypeName}`);\n        }\n        if (value < minRange || value > maxRange) {\n          throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\n        }\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': integerReadValueFromPointer(name, size, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        var size = HEAPU32[((handle)>>2)];\n        var data = HEAPU32[(((handle)+(4))>>2)];\n        return new TA(HEAP8.buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    };\n\n  \n  \n  \n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      assert(typeof str === 'string', `stringToUTF8Array expects a string (got ${typeof str})`);\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  \n  \n  var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name,\n        // For some method names we use string keys here since they are part of\n        // the public/external API and/or used by the runtime-generated code.\n        'fromWireType'(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType'(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes POINTER_SIZE alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n\n  \n  \n  \n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  var UTF16ToString = (ptr, maxBytesToRead) => {\n      assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    };\n  \n  var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      maxBytesToWrite ??= 0x7FFFFFFF;\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    };\n  \n  var lengthBytesUTF16 = (str) => {\n      return str.length*2;\n    };\n  \n  var UTF32ToString = (ptr, maxBytesToRead) => {\n      assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    };\n  \n  var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      maxBytesToWrite ??= 0x7FFFFFFF;\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    };\n  \n  var lengthBytesUTF32 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    };\n  var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, readCharAt, lengthBytesUTF;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        readCharAt = (pointer) => HEAPU16[((pointer)>>1)];\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        readCharAt = (pointer) => HEAPU32[((pointer)>>2)];\n      }\n      registerType(rawType, {\n        name,\n        'fromWireType': (value) => {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[((value)>>2)];\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || readCharAt(currentBytePtr) == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': (destructors, value) => {\n          if (!(typeof value == 'string')) {\n            throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n          }\n  \n          // assumes POINTER_SIZE alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[((ptr)>>2)] = length / charSize;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    };\n\n  \n  var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true, // void return values can be optimized out sometimes\n        name,\n        'argPackAdvance': 0,\n        'fromWireType': () => undefined,\n        // TODO: assert if anything else is given?\n        'toWireType': (destructors, o) => undefined,\n      });\n    };\n\n  var __emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  \n  \n  \n  var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\n      }\n      return impl;\n    };\n  \n  var emval_returnValue = (returnType, destructorsRef, handle) => {\n      var destructors = [];\n      var result = returnType['toWireType'](destructors, handle);\n      if (destructors.length) {\n        // void, primitives and any other types w/o destructors don't need to allocate a handle\n        HEAPU32[((destructorsRef)>>2)] = Emval.toHandle(destructors);\n      }\n      return result;\n    };\n  var __emval_as = (handle, returnType, destructorsRef) => {\n      handle = Emval.toValue(handle);\n      returnType = requireRegisteredType(returnType, 'emval::as');\n      return emval_returnValue(returnType, destructorsRef, handle);\n    };\n\n\n  var __emval_get_property = (handle, key) => {\n      handle = Emval.toValue(handle);\n      key = Emval.toValue(key);\n      return Emval.toHandle(handle[key]);\n    };\n\n  var emval_symbols = {\n  };\n  \n  var getStringOrSymbol = (address) => {\n      var symbol = emval_symbols[address];\n      if (symbol === undefined) {\n        return readLatin1String(address);\n      }\n      return symbol;\n    };\n  \n  var __emval_new_cstring = (v) => Emval.toHandle(getStringOrSymbol(v));\n\n  \n  \n  var __emval_run_destructors = (handle) => {\n      var destructors = Emval.toValue(handle);\n      runDestructors(destructors);\n      __emval_decref(handle);\n    };\n\n  \n  var __emval_take_value = (type, arg) => {\n      type = requireRegisteredType(type, '_emval_take_value');\n      var v = type['readValueFromPointer'](arg);\n      return Emval.toHandle(v);\n    };\n\n  var _abort = () => {\n      abort('native code called abort()');\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n        err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n      assert(requestedSize > oldSize);\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\n        return false;\n      }\n  \n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\n      return false;\n    };\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        assert(str.charCodeAt(i) === (str.charCodeAt(i) & 0xff));\n        HEAP8[buffer++] = str.charCodeAt(i);\n      }\n      // Null-terminate the string\n      HEAP8[buffer] = 0;\n    };\n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => bufSize += string.length + 1);\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  \n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      checkUnflushedContent();\n  \n      // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\n      if (keepRuntimeAlive() && !implicit) {\n        var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n        err(msg);\n      }\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n\n  var SYSCALLS = {\n  varargs:undefined,\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  };\n  var _fd_close = (fd) => {\n      abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n    };\n\n  var convertI32PairToI53Checked = (lo, hi) => {\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\n      assert(hi === (hi|0));                    // hi should be a i32\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    };\n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);\n  \n    \n      return 70;\n    ;\n  }\n\n  var printCharBuffers = [null,[],[]];\n  \n  var printChar = (stream, curr) => {\n      var buffer = printCharBuffers[stream];\n      assert(buffer);\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    };\n  \n  var flush_NO_FILESYSTEM = () => {\n      // flush anything remaining in the buffers during shutdown\n      _fflush(0);\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    };\n  \n  \n  var _fd_write = (fd, iov, iovcnt, pnum) => {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    };\n\nembind_init_charCodes();\nBindingError = Module['BindingError'] = class BindingError extends Error { constructor(message) { super(message); this.name = 'BindingError'; }};\nInternalError = Module['InternalError'] = class InternalError extends Error { constructor(message) { super(message); this.name = 'InternalError'; }};\ninit_ClassHandle();\ninit_embind();;\ninit_RegisteredPointer();\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\ninit_emval();;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  /** @export */\n  __assert_fail: ___assert_fail,\n  /** @export */\n  __cxa_throw: ___cxa_throw,\n  /** @export */\n  _embind_register_bigint: __embind_register_bigint,\n  /** @export */\n  _embind_register_bool: __embind_register_bool,\n  /** @export */\n  _embind_register_class: __embind_register_class,\n  /** @export */\n  _embind_register_class_constructor: __embind_register_class_constructor,\n  /** @export */\n  _embind_register_class_function: __embind_register_class_function,\n  /** @export */\n  _embind_register_emval: __embind_register_emval,\n  /** @export */\n  _embind_register_float: __embind_register_float,\n  /** @export */\n  _embind_register_integer: __embind_register_integer,\n  /** @export */\n  _embind_register_memory_view: __embind_register_memory_view,\n  /** @export */\n  _embind_register_std_string: __embind_register_std_string,\n  /** @export */\n  _embind_register_std_wstring: __embind_register_std_wstring,\n  /** @export */\n  _embind_register_void: __embind_register_void,\n  /** @export */\n  _emscripten_memcpy_js: __emscripten_memcpy_js,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _emval_as: __emval_as,\n  /** @export */\n  _emval_decref: __emval_decref,\n  /** @export */\n  _emval_get_property: __emval_get_property,\n  /** @export */\n  _emval_new_cstring: __emval_new_cstring,\n  /** @export */\n  _emval_run_destructors: __emval_run_destructors,\n  /** @export */\n  _emval_take_value: __emval_take_value,\n  /** @export */\n  abort: _abort,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  invoke_ii: invoke_ii,\n  /** @export */\n  invoke_iii: invoke_iii,\n  /** @export */\n  invoke_iiii: invoke_iiii,\n  /** @export */\n  invoke_iiiii: invoke_iiiii,\n  /** @export */\n  invoke_iiiiiiii: invoke_iiiiiiii,\n  /** @export */\n  invoke_iiiiiiiiii: invoke_iiiiiiiiii,\n  /** @export */\n  invoke_iji: invoke_iji,\n  /** @export */\n  invoke_vi: invoke_vi,\n  /** @export */\n  invoke_vidd: invoke_vidd,\n  /** @export */\n  invoke_vii: invoke_vii,\n  /** @export */\n  invoke_viii: invoke_viii,\n  /** @export */\n  invoke_viiii: invoke_viiii\n};\nvar wasmExports = createWasm();\nvar ___wasm_call_ctors = createExportWrapper('__wasm_call_ctors', 0);\nvar _fflush = createExportWrapper('fflush', 1);\nvar _malloc = createExportWrapper('malloc', 1);\nvar _free = createExportWrapper('free', 1);\nvar ___getTypeName = createExportWrapper('__getTypeName', 1);\nvar _setThrew = createExportWrapper('setThrew', 2);\nvar __emscripten_tempret_set = createExportWrapper('_emscripten_tempret_set', 1);\nvar _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports['emscripten_stack_init'])();\nvar _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports['emscripten_stack_get_free'])();\nvar _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports['emscripten_stack_get_base'])();\nvar _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports['emscripten_stack_get_end'])();\nvar __emscripten_stack_restore = (a0) => (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(a0);\nvar __emscripten_stack_alloc = (a0) => (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'])();\nvar ___cxa_is_pointer_type = createExportWrapper('__cxa_is_pointer_type', 1);\nvar dynCall_iji = Module['dynCall_iji'] = createExportWrapper('dynCall_iji', 4);\nvar dynCall_jiiiii = Module['dynCall_jiiiii'] = createExportWrapper('dynCall_jiiiii', 6);\nvar dynCall_jiji = Module['dynCall_jiji'] = createExportWrapper('dynCall_jiji', 5);\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vidd(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iji(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iji(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nvar missingLibrarySymbols = [\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertU32PairToI53',\n  'stackAlloc',\n  'getTempRet0',\n  'setTempRet0',\n  'zeroMemory',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'initRandomFill',\n  'randomFill',\n  'emscriptenLog',\n  'readEmAsmArgs',\n  'jstoi_q',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'HandleAllocator',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'getCFunc',\n  'ccall',\n  'cwrap',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToNewUTF8',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'jsStackTrace',\n  'getCallstack',\n  'convertPCtoSourceLocation',\n  'checkWasiClock',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'safeSetTimeout',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'idsToPromises',\n  'makePromiseCallback',\n  'findMatchingCatch',\n  'Browser_asyncPrepareDataCounter',\n  'setMainLoop',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'FS_createPreloadedFile',\n  'FS_modeStringToFlags',\n  'FS_getMode',\n  'FS_stdin_getChar',\n  'FS_createDataFile',\n  'FS_unlink',\n  'FS_mkdirTree',\n  '_setNetworkCallback',\n  'heapObjectForWebGLType',\n  'toTypedArrayIndex',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'setErrNo',\n  'demangle',\n  'stackTrace',\n  'getFunctionArgsName',\n  'createJsInvokerSignature',\n  'registerInheritedInstance',\n  'unregisterInheritedInstance',\n  'enumReadValueFromPointer',\n  'validateThis',\n  'emval_get_global',\n  'emval_lookupTypes',\n  'emval_addMethodCaller',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_readFile',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'wasmMemory',\n  'wasmExports',\n  'writeStackCookie',\n  'checkStackCookie',\n  'convertI32PairToI53Checked',\n  'stackSave',\n  'stackRestore',\n  'ptrToString',\n  'exitJS',\n  'getHeapMax',\n  'growMemory',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'timers',\n  'warnOnce',\n  'readEmAsmArgsArray',\n  'jstoi_s',\n  'getExecutableName',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'keepRuntimeAlive',\n  'wasmTable',\n  'noExitRuntime',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'stringToAscii',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'JSEvents',\n  'specialHTMLTargets',\n  'findCanvasEventTarget',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'UNWIND_CACHE',\n  'ExitStatus',\n  'getEnvStrings',\n  'flush_NO_FILESYSTEM',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'ExceptionInfo',\n  'Browser',\n  'getPreloadedImageData__data',\n  'wget',\n  'SYSCALLS',\n  'preloadPlugins',\n  'FS_stdin_getChar_buffer',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'GL',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'InternalError',\n  'BindingError',\n  'throwInternalError',\n  'throwBindingError',\n  'registeredTypes',\n  'awaitingDependencies',\n  'typeDependencies',\n  'tupleRegistrations',\n  'structRegistrations',\n  'sharedRegisterType',\n  'whenDependentTypesAreResolved',\n  'embind_charCodes',\n  'embind_init_charCodes',\n  'readLatin1String',\n  'getTypeName',\n  'getFunctionName',\n  'heap32VectorToArray',\n  'requireRegisteredType',\n  'usesDestructorStack',\n  'createJsInvoker',\n  'UnboundTypeError',\n  'PureVirtualError',\n  'GenericWireTypeSize',\n  'EmValType',\n  'init_embind',\n  'throwUnboundTypeError',\n  'ensureOverloadTable',\n  'exposePublicSymbol',\n  'replacePublicSymbol',\n  'extendError',\n  'createNamedFunction',\n  'embindRepr',\n  'registeredInstances',\n  'getBasestPointer',\n  'getInheritedInstance',\n  'getInheritedInstanceCount',\n  'getLiveInheritedInstances',\n  'registeredPointers',\n  'registerType',\n  'integerReadValueFromPointer',\n  'floatReadValueFromPointer',\n  'readPointer',\n  'runDestructors',\n  'newFunc',\n  'craftInvokerFunction',\n  'embind__requireFunction',\n  'genericPointerToWireType',\n  'constNoSmartPtrRawPointerToWireType',\n  'nonConstNoSmartPtrRawPointerToWireType',\n  'init_RegisteredPointer',\n  'RegisteredPointer',\n  'RegisteredPointer_fromWireType',\n  'runDestructor',\n  'releaseClassHandle',\n  'finalizationRegistry',\n  'detachFinalizer_deps',\n  'detachFinalizer',\n  'attachFinalizer',\n  'makeClassHandle',\n  'init_ClassHandle',\n  'ClassHandle',\n  'throwInstanceAlreadyDeleted',\n  'deletionQueue',\n  'flushPendingDeletes',\n  'delayFunction',\n  'setDelayFunction',\n  'RegisteredClass',\n  'shallowCopyInternalPointer',\n  'downcastPointer',\n  'upcastPointer',\n  'char_0',\n  'char_9',\n  'makeLegalFunctionName',\n  'emval_freelist',\n  'emval_handles',\n  'emval_symbols',\n  'init_emval',\n  'count_emval_handles',\n  'getStringOrSymbol',\n  'Emval',\n  'emval_returnValue',\n  'emval_methodCallers',\n  'reflectConstruct',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run() {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n// end include: postamble.js\n\n", "/* eslint-disable no-console */\nimport './webp_converter.js';\n\nconst readFileAsArrayBuffer = (file: File): Promise<ArrayBuffer> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = () => reject(reader.error);\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nconst handleConvert = async (file: File | null, quality: number): Promise<string> => {\n  if (file) {\n    if (quality < 0 || quality > 100) {\n      return '';\n    }\n\n    console.log('Conversion started');\n\n    try {\n      const arrayBuffer = await readFileAsArrayBuffer(file);\n\n      console.log('File read as array buffer');\n\n      const bytes = new Uint8Array(arrayBuffer);\n\n      console.log('File converted to Uint8Array');\n\n      const converter = new Module.WEBPConverter(bytes, quality);\n      const output = converter.convertImage();\n\n      console.log('Image converted');\n\n      const blob = new Blob([output], { type: 'image/webp' });\n      const url = URL.createObjectURL(blob);\n\n      console.log('Image conversion successful, URL created');\n      console.log('Conversion ended');\n\n      return url;\n    } catch (error) {\n      console.error('Error converting image:', error);\n\n      return '';\n    }\n  }\n\n  return '';\n};\n\nexport { readFileAsArrayBuffer, handleConvert };\n"],
  "mappings": "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ACA,aACA,eACA,WACA,UACA,YACA,YACA,YACA,YACA,eACA,gBACA,iBACA,aACA,gBACA,gBACA,UACA,aACA,yBACA,kBACA,uBACA,sBACA,mBACA,YACA,cACA,YACA,cACA,YACA,kBACA,oBACA,aACA,cACA,eACA,aACA,WACA,QACA,QACA,gBACA,iBACA,mBACA,0BACA,oBACA,iBACA,qBACA,cACA,iBACA,iBACA,SACA,SACA,SACA,eACA,qBACA,mBACA,gBACA,kBACA,sBACA,qBACA,2BACA,yBACA,kBACA,wBACA,qBACA,6BACA,6BACA,0BACA,6BACA,iCACA,yCACA,4BACA,oCACA,oBACA,iCACA,yCACA,gCACA,wCACA,6BACA,qCACA,0BACA,mCACA,wBACA,eACA,wCACA,sBACA,iCACA,yCACA,wCACA,qBACA,gCACA,wCACA,6BACA,uBACA,+BACA,oCACA,uBACA,UACA,+BACA,uBACA,uBACA,eACA,eACA,4BACA,iBACA,yBACA,yBACA,uBACA,iBACA,sBACA,wBACA,uBACA,aACA,cACA,gBACA,sBACA,oBACA,kCACA,cACA,kBACA,mBACA,yBACA,uBACA,aACA,mBACA,oBACA,YACA,eACA,sBACA,yBACA,oBACA,sCACA,uCACA,kCACA,gCACA,qBACA,gCACA,iCACA,iCACA,4BACA,0BACA,6CACA,uBACA,iCACA,+BACA,eACA,6BACA,qBACA,eACA,cACA,WACA,sBACA,qBACA,WACA,WACA,aACA,sBACA,2BACA,4BACA,8BACA,2BACA,eACA,mBACA,oBACA,uBACF,EACAA,GAAsB,QAAQ7b,EAAoB,EAElD,IAAI8b,GAAoB,CACtB,MACA,cACA,YACA,eACA,YACA,eACA,mBACA,sBACA,kBACA,gBACA,oBACA,gBACA,kBACA,cACA,MACA,MACA,WACA,QACA,aACA,cACA,mBACA,mBACA,6BACA,YACA,eACA,cACA,SACA,aACA,aACA,MACA,qBACA,kBACA,gCACA,6BACA,cACA,iBACA,MACA,YACA,UACA,SACA,WACA,qBACA,UACA,oBACA,gBACA,eACA,UACA,mBACA,YACA,gBACA,mBACA,sBACA,WACA,WACA,OACA,UACA,cACA,oBACA,eACA,oBACA,eACA,kBACA,gBACA,eACA,gBACA,gBACA,mBACA,gBACA,gBACA,mBACA,WACA,qBACA,wBACA,4BACA,0BACA,eACA,aACA,gBACA,sBACA,aACA,yBACA,gBACA,kBACA,gBACA,UACA,8BACA,OACA,WACA,iBACA,0BACA,KACA,QACA,MACA,SACA,SACA,uBACA,4BACA,0BACA,KACA,KACA,OACA,MACA,OACA,WACA,MACA,UACA,eACA,sBACA,gBACA,eACA,qBACA,oBACA,kBACA,uBACA,mBACA,qBACA,sBACA,qBACA,gCACA,mBACA,wBACA,mBACA,cACA,kBACA,sBACA,wBACA,sBACA,kBACA,mBACA,mBACA,sBACA,YACA,cACA,wBACA,sBACA,qBACA,sBACA,cACA,sBACA,aACA,sBACA,mBACA,uBACA,4BACA,4BACA,qBACA,eACA,8BACA,4BACA,cACA,iBACA,UACA,uBACA,0BACA,2BACA,sCACA,yCACA,yBACA,oBACA,iCACA,gBACA,qBACA,uBACA,uBACA,kBACA,kBACA,kBACA,mBACA,cACA,8BACA,gBACA,sBACA,gBACA,mBACA,kBACA,6BACA,kBACA,gBACA,SACA,SACA,wBACA,iBACA,gBACA,gBACA,aACA,sBACA,oBACA,QACA,oBACA,sBACA,kBACF,EACAA,GAAkB,QAAQ5b,EAAuB,EAIjD,IAAI6b,GAEJlf,EAAwB,SAASmf,GAAY,CAEtCD,IAAWE,GAAI,EACfF,KAAWlf,EAAwBmf,EAC1C,EAEA,SAASE,IAAiB,CAIxBrB,GAAuB,EAEvBvf,GAAiB,CACnB,CAEA,SAAS2gB,IAAM,CAWb,GATItf,EAAkB,IAIpBuf,GAAe,EAEjB/f,GAAO,EAGHQ,EAAkB,GACpB,OAGF,SAASwf,GAAQ,CAGXJ,KACJA,GAAY,GACZjkB,EAAO,UAAe,GAElB,CAAAyC,KAEJ+B,GAAY,EAERxE,EAAO,sBAAyBA,EAAO,qBAAwB,EAEnE0B,EAAO,CAAC1B,EAAO,MAAU,0GAA0G,EAEnIyE,GAAQ,GACV,CAEIzE,EAAO,WACTA,EAAO,UAAa,YAAY,EAChC,WAAW,UAAW,CACpB,WAAW,UAAW,CACpBA,EAAO,UAAa,EAAE,CACxB,EAAG,CAAC,EACJqkB,EAAM,CACR,EAAG,CAAC,GAGJA,EAAM,EAER1gB,GAAiB,CACnB,CAEA,SAAS6c,IAAwB,CAY/B,IAAI8D,EAASliB,GACTmiB,EAAS1iB,EACT2iB,EAAM,GACVpiB,GAAMP,EAAO+c,GAAM,CACjB4F,EAAM,EACR,EACA,GAAI,CACF/C,GAAoB,CACtB,MAAW,CAAC,CACZrf,GAAMkiB,EACNziB,EAAM0iB,EACFC,IACFvc,EAAS,wKAAwK,EACjLA,EAAS,wGAAwG,EAErH,CAEA,GAAIjI,EAAO,QAET,IADI,OAAOA,EAAO,SAAc,aAAYA,EAAO,QAAa,CAACA,EAAO,OAAU,GAC3EA,EAAO,QAAW,OAAS,GAChCA,EAAO,QAAW,IAAI,EAAE,EAI5BmkB,GAAI,IC19HJ,IAAAM,GAAO,SAEDC,GAAyBC,GACtB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAMC,EAAS,IAAI,WAEnBA,EAAO,OAAS,IAAMF,EAAQE,EAAO,MAAqB,EAC1DA,EAAO,QAAU,IAAMD,EAAOC,EAAO,KAAK,EAC1CA,EAAO,kBAAkBH,CAAI,CAC/B,CAAC,EAGGI,GAAgB,MAAOJ,EAAmBK,IAAqC,CACnF,GAAIL,EAAM,CACR,GAAIK,EAAU,GAAKA,EAAU,IAC3B,MAAO,GAGT,QAAQ,IAAI,oBAAoB,EAEhC,GAAI,CACF,IAAMC,EAAc,MAAMP,GAAsBC,CAAI,EAEpD,QAAQ,IAAI,2BAA2B,EAEvC,IAAMO,EAAQ,IAAI,WAAWD,CAAW,EAExC,QAAQ,IAAI,8BAA8B,EAG1C,IAAME,EADY,IAAI,OAAO,cAAcD,EAAOF,CAAO,EAChC,aAAa,EAEtC,QAAQ,IAAI,iBAAiB,EAE7B,IAAMI,EAAO,IAAI,KAAK,CAACD,CAAM,EAAG,CAAE,KAAM,YAAa,CAAC,EAChDE,EAAM,IAAI,gBAAgBD,CAAI,EAEpC,eAAQ,IAAI,0CAA0C,EACtD,QAAQ,IAAI,kBAAkB,EAEvBC,CACT,OAASC,EAAO,CACd,eAAQ,MAAM,0BAA2BA,CAAK,EAEvC,EACT,CACF,CAEA,MAAO,EACT",
  "names": ["require_webp_converter", "__commonJSMin", "exports", "module", "Module", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "ENVIRONMENT_IS_SHELL", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "nodeVersion", "numericVersion", "minVersion", "fs", "nodePath", "filename", "binary", "isFileURI", "ret", "assert", "onload", "onerror", "err", "data", "ex", "ExitStatus", "__require", "url", "xhr", "out", "checkIncomingModuleAPI", "legacyModuleProp", "wasmBinary", "wasmMemory", "ABORT", "EXITSTATUS", "condition", "text", "abort", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "writeStackCookie", "max", "_emscripten_stack_get_end", "checkStackCookie", "cookie1", "cookie2", "ptrToString", "h16", "h8", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runtimeInitialized", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "runDependencyTracking", "addRunDependency", "id", "shown", "dep", "removeRunDependency", "callback", "what", "e", "FS", "dataURIPrefix", "isDataURI", "createExportWrapper", "name", "nargs", "args", "f", "wasmExports", "wasmBinaryFile", "getBinarySync", "file", "getBinaryPromise", "binaryFile", "response", "resolve", "reject", "instantiateArrayBuffer", "imports", "receiver", "reason", "instantiateAsync", "result", "createWasm", "info", "wasmImports", "receiveInstance", "instance", "wasmTable", "trueModule", "receiveInstantiationResult", "prop", "newName", "incoming", "extra", "ignoredModuleProp", "isExportedByForceFilesystem", "missingGlobal", "sym", "msg", "warnOnce", "missingLibrarySymbol", "librarySymbol", "unexportedRuntimeSymbol", "callbacks", "noExitRuntime", "ptr", "stackRestore", "val", "__emscripten_stack_restore", "stackSave", "_emscripten_stack_get_current", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "___assert_fail", "line", "func", "ExceptionInfo", "excPtr", "type", "destructor", "caught", "rethrown", "adjustedPtr", "isPointer", "___cxa_is_pointer_type", "adjusted", "exceptionLast", "uncaughtExceptionCount", "___cxa_throw", "__embind_register_bigint", "primitiveType", "size", "minRange", "maxRange", "embind_init_charCodes", "codes", "i", "embind_charCodes", "readLatin1String", "c", "awaitingDependencies", "registeredTypes", "typeDependencies", "BindingError", "throwBindingError", "message", "InternalError", "throwInternalError", "whenDependentTypesAreResolved", "myTypes", "dependentTypes", "getTypeConverters", "onComplete", "typeConverters", "myTypeConverters", "registerType", "unregisteredTypes", "registered", "dt", "sharedRegisterType", "rawType", "registeredInstance", "options", "GenericWireTypeSize", "__embind_register_bool", "trueValue", "falseValue", "wt", "destructors", "o", "pointer", "shallowCopyInternalPointer", "throwInstanceAlreadyDeleted", "obj", "getInstanceTypeName", "handle", "finalizationRegistry", "detachFinalizer", "runDestructor", "$$", "releaseClassHandle", "toDelete", "downcastPointer", "ptrClass", "desiredClass", "rv", "registeredPointers", "getInheritedInstanceCount", "registeredInstances", "getLiveInheritedInstances", "k", "deletionQueue", "flushPendingDeletes", "delayFunction", "setDelayFunction", "fn", "init_embind", "getBasestPointer", "class_", "getInheritedInstance", "makeClassHandle", "prototype", "record", "hasSmartPtrType", "hasSmartPtr", "attachFinalizer", "RegisteredPointer_fromWireType", "rawPointer", "makeDefaultHandle", "actualType", "registeredPointerRecord", "toType", "dp", "cls", "init_ClassHandle", "ClassHandle", "other", "leftClass", "left", "rightClass", "right", "clone", "createNamedFunction", "body", "ensureOverloadTable", "proto", "methodName", "humanName", "prevFunc", "exposePublicSymbol", "value", "numArguments", "char_0", "char_9", "makeLegalFunctionName", "RegisteredClass", "constructor", "instancePrototype", "rawDestructor", "baseClass", "getActualType", "upcast", "downcast", "upcastPointer", "constNoSmartPtrRawPointerToWireType", "embindRepr", "handleClass", "genericPointerToWireType", "clonedHandle", "Emval", "nonConstNoSmartPtrRawPointerToWireType", "readPointer", "init_RegisteredPointer", "RegisteredPointer", "registeredClass", "isReference", "isConst", "isSmartPointer", "pointeeType", "sharingPolicy", "rawGetPointee", "rawConstructor", "rawShare", "replacePublicSymbol", "dynCallLegacy", "sig", "wasmTableMirror", "getWasmTableEntry", "funcPtr", "dynCall", "rtn", "getDynCaller", "embind__requireFunction", "signature", "rawFunction", "makeDynCaller", "fp", "extendError", "baseErrorType", "errorName", "errorClass", "stack", "UnboundTypeError", "getTypeName", "___getTypeName", "_free", "throwUnboundTypeError", "types", "unboundTypes", "seen", "visit", "__embind_register_class", "rawPointerType", "rawConstPointerType", "baseClassRawType", "getActualTypeSignature", "upcastSignature", "downcastSignature", "destructorSignature", "legalFunctionName", "base", "_a", "basePrototype", "referenceConverter", "pointerConverter", "constPointerConverter", "heap32VectorToArray", "count", "firstElement", "array", "runDestructors", "del", "usesDestructorStack", "argTypes", "newFunc", "argumentList", "dummy", "r", "createJsInvoker", "isClassMethodFunc", "returns", "isAsync", "needsDestructorStack", "argCount", "argsList", "argsListWired", "invokerFnBody", "dtorStack", "args1", "returnVal", "paramName", "craftInvokerFunction", "classType", "cppInvokerFunc", "cppTargetFunc", "closureArgs", "invokerFn", "__embind_register_class_constructor", "rawClassType", "rawArgTypesAddr", "invokerSignature", "invoker", "rawArgTypes", "getFunctionName", "argsIndex", "__embind_register_class_function", "rawInvoker", "context", "isPureVirtual", "unboundTypesHandler", "method", "memberFunction", "emval_freelist", "emval_handles", "__emval_decref", "count_emval_handles", "init_emval", "EmValType", "__embind_register_emval", "v", "t", "floatReadValueFromPointer", "width", "__embind_register_float", "integerReadValueFromPointer", "signed", "__embind_register_integer", "fromWireType", "bitshift", "isUnsignedType", "checkAssertions", "toTypeName", "toWireType", "__embind_register_memory_view", "dataTypeIndex", "typeMapping", "TA", "decodeMemoryView", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "u", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "__embind_register_std_string", "stdStringIsUTF8", "length", "payload", "decodeStartPtr", "currentBytePtr", "maxRead", "stringSegment", "a", "valueIsOfTypeString", "_malloc", "charCode", "UTF16Decoder", "UTF16ToString", "maxIdx", "codeUnit", "stringToUTF16", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "trailSurrogate", "lengthBytesUTF32", "__embind_register_std_wstring", "charSize", "decodeString", "encodeString", "readCharAt", "lengthBytesUTF", "maxReadBytes", "__embind_register_void", "__emscripten_memcpy_js", "dest", "src", "num", "__emscripten_throw_longjmp", "requireRegisteredType", "impl", "emval_returnValue", "returnType", "destructorsRef", "__emval_as", "__emval_get_property", "key", "emval_symbols", "getStringOrSymbol", "address", "symbol", "__emval_new_cstring", "__emval_run_destructors", "__emval_take_value", "arg", "_abort", "getHeapMax", "growMemory", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "newSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "strings", "stringToAscii", "buffer", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "runtimeKeepaliveCounter", "keepRuntimeAlive", "_proc_exit", "code", "exitJS", "implicit", "checkUnflushedContent", "_exit", "_fd_close", "fd", "convertI32PairToI53Checked", "lo", "hi", "_fd_seek", "offset_low", "offset_high", "whence", "newOffset", "offset", "printCharBuffers", "printChar", "stream", "curr", "flush_NO_FILESYSTEM", "_fflush", "_fd_write", "iov", "iovcnt", "pnum", "j", "invoke_ii", "invoke_iii", "invoke_iiii", "invoke_iiiii", "invoke_iiiiiiii", "invoke_iiiiiiiiii", "invoke_iji", "invoke_vi", "invoke_vidd", "invoke_vii", "invoke_viii", "invoke_viiii", "___wasm_call_ctors", "_setThrew", "__emscripten_tempret_set", "_emscripten_stack_init", "a0", "dynCall_iji", "dynCall_jiiiii", "dynCall_jiji", "index", "a1", "sp", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "missingLibrarySymbols", "unexportedSymbols", "calledRun", "runCaller", "run", "stackCheckInit", "doRun", "oldOut", "oldErr", "has", "import_webp_converter", "readFileAsArrayBuffer", "file", "resolve", "reject", "reader", "handleConvert", "quality", "arrayBuffer", "bytes", "output", "blob", "url", "error"]
}
